{"mappings":"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","sources":["<anon>","src/globals.js","src/modules/setLoadingStates.js","src/modules/staggerHeading.js","src/modules/staggerText.js","src/modules/setLinesWrapper.js","src/modules/staggerElements.js","src/modules/buttons.js","src/modules/menu.js","src/modules/setPathAnimation.js","src/modules/videoModal.js"],"sourcesContent":["(() => {\nfunction $ce6a18b12420bce7$export$7fd17f34fe72f4b0() {\n    const loading = document.querySelector(\".loading-wrapper\");\n    if (!loading) return;\n    const logo = loading.querySelector(\".loading_logo\");\n    const logoCircle = logo.querySelector(\"circle\");\n    const logoPath = logo.querySelector(\"path\");\n    gsap.set(logoCircle, {\n        drawSVG: \"0 100% live\"\n    });\n    gsap.set(logoPath, {\n        drawSVG: \"0 100% live\"\n    });\n    gsap.to(logoCircle, {\n        drawSVG: \"100% 100% live\",\n        duration: 1,\n        ease: \"expo.out\"\n    });\n    gsap.to(logoPath, {\n        drawSVG: \"100% 100% live\",\n        duration: 1,\n        ease: \"expo.out\"\n    });\n    gsap.to(loading, {\n        maskPosition: \"100% 100%\",\n        duration: 1,\n        delay: 0.5,\n        ease: \"expo.out\",\n        onComplete: ()=>{\n            loading.style.display = \"none\";\n            gsap.set(logoCircle, {\n                drawSVG: \"0% 0% live\"\n            });\n            gsap.set(logoPath, {\n                drawSVG: \"0% 0% live\"\n            });\n            gsap.set(loading, {\n                maskPosition: \"0% 100%\"\n            });\n        }\n    });\n    // Loading animation\n    const links = document.querySelectorAll(\"a\");\n    links.forEach((l)=>{\n        l.addEventListener(\"click\", (e)=>{\n            // e.preventDefault();\n            const href = l.href;\n            const url = new URL(href);\n            if (window.location.origin === url.origin && window.location.pathname !== url.pathname && l.target !== \"_blank\") {\n                e.preventDefault();\n                loading.style.display = \"block\";\n                gsap.to(logoCircle, {\n                    drawSVG: \"0% 100% live\",\n                    duration: 0.5,\n                    delay: 0.5,\n                    ease: \"expo.out\"\n                });\n                gsap.to(logoPath, {\n                    drawSVG: \"0% 100% live\",\n                    duration: 0.5,\n                    delay: 0.5,\n                    ease: \"expo.out\"\n                });\n                gsap.to(loading, {\n                    maskPosition: \"50% 100%\",\n                    duration: 1,\n                    ease: \"expo.out\",\n                    onComplete: ()=>{\n                        window.location.href = href;\n                    }\n                });\n            // setTimeout(() => {\n            //   window.location.href = href;\n            // }, 500);\n            }\n        });\n    });\n}\n\n\n// Link timelines to scroll position\nfunction $719658c63b791dcb$export$48ba2fbf80d9a7d(el, triggerEl, start, end, delay, withScroll) {\n    const wrapper = document.createElement(\"div\");\n    wrapper.classList.add(\"reveal-heading_wrapper\");\n    el.parentNode.insertBefore(wrapper, el);\n    const transparent = el.cloneNode(true);\n    wrapper.appendChild(el);\n    wrapper.appendChild(transparent);\n    transparent.classList.add('transparent');\n    // transparent.removeAttribute('revealHeading');\n    gsap.set(el, {\n        opacity: 0\n    });\n    gsap.set(transparent, {\n        backgroundPositionX: \"0%\"\n    });\n    const trigger = {\n        trigger: triggerEl,\n        scrub: true,\n        once: true,\n        start: start,\n        fastScrollEnd: 500,\n        preventOverlaps: \"scroll-headings\"\n    };\n    if (!withScroll) {\n        const tl = gsap.timeline({\n            paused: true\n        });\n        trigger.onEnter = ()=>{\n            tl.to(transparent, {\n                backgroundPositionX: \"50%\",\n                delay: delay,\n                duration: 0.5,\n                overwrite: \"auto\",\n                ease: \"expo.out\",\n                onComplete: ()=>{\n                    gsap.set(el, {\n                        opacity: 1\n                    });\n                }\n            }).to(transparent, {\n                backgroundPositionX: \"100%\",\n                duration: 0.5,\n                overwrite: \"auto\",\n                ease: \"expo.out\",\n                onComplete: ()=>{\n                    transparent.remove();\n                }\n            });\n            tl.play();\n        };\n        gsap.timeline({\n            scrollTrigger: trigger\n        });\n    } else {\n        trigger.end = end;\n        gsap.timeline({\n            scrollTrigger: trigger\n        }).to(transparent, {\n            backgroundPositionX: \"50%\",\n            delay: delay,\n            duration: 0.3,\n            overwrite: \"auto\",\n            ease: \"expo.out\",\n            onComplete: ()=>{\n                gsap.set(el, {\n                    opacity: 1\n                });\n            }\n        }).to(transparent, {\n            backgroundPositionX: \"100%\",\n            duration: 0.3,\n            overwrite: \"auto\",\n            ease: \"expo.out\",\n            onComplete: ()=>{\n                transparent.remove();\n            }\n        });\n    }\n}\nfunction $719658c63b791dcb$export$f8b3d1cda34ef9a8() {\n    const blocks = document.querySelectorAll(\"[reveal-heading]\");\n    blocks.forEach((el)=>{\n        el.classList.add('init');\n        const startVal = el.dataset.startPos || \"center bottom\", endVal = el.dataset.endPos || \"bottom center\", delay = el.dataset.delay || 0.2, withScrollTrigger = el.dataset.withScroll || false;\n        $719658c63b791dcb$export$48ba2fbf80d9a7d(el, el, startVal, endVal, delay, withScrollTrigger);\n    });\n}\n\n\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement('span');\n        wrapper.classList.add('line-wrapper');\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === 'function') callback();\n}\n\n\n// Link timelines to scroll position\nfunction $1aa2e0393d0f1beb$var$createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n    const trigger = {\n        trigger: triggerElement,\n        scrub: true,\n        start: start,\n        fastScrollEnd: 500,\n        preventOverlaps: \"scroll-text\"\n    };\n    if (!withScroll) {\n        trigger.onEnter = ()=>{\n            gsap.to(elements, {\n                yPercent: 0,\n                stagger: stagger,\n                ease: \"power4.out\",\n                delay: Number(delay)\n            });\n        };\n        gsap.timeline({\n            scrollTrigger: trigger\n        });\n    } else {\n        trigger.end = end;\n        gsap.timeline({\n            scrollTrigger: trigger\n        }).to(words, {\n            yPercent: 0,\n            stagger: stagger,\n            ease: \"none\"\n        });\n    }\n}\nfunction $1aa2e0393d0f1beb$export$1601281ad392a6d8() {\n    // Split all words on the brand core section\n    const textEls = document.querySelectorAll('[stagger-text]');\n    textEls.forEach((el)=>{\n        if (el.classList.contains('w-richtext')) {\n            const staggerTextEls = new SplitType(el.querySelectorAll('p, li, h2, h3'), {\n                types: \"lines\",\n                tagName: \"span\"\n            });\n            (0, $1c7845f0e1de0887$export$8f060496e19d4bbb)(staggerTextEls.lines, ()=>{\n                gsap.set(staggerTextEls.lines, {\n                    yPercent: 100\n                });\n            });\n        } else {\n            const staggerTextEls = new SplitType(el, {\n                types: \"lines\",\n                tagName: \"span\"\n            });\n            (0, $1c7845f0e1de0887$export$8f060496e19d4bbb)(staggerTextEls.lines, ()=>{\n                gsap.set(staggerTextEls.lines, {\n                    yPercent: 100\n                });\n            });\n        }\n    });\n    const textBlocks = document.querySelectorAll(\"[stagger-text]\");\n    textBlocks.forEach((el)=>{\n        el.classList.add(\"init\");\n        const words1 = el.querySelectorAll(\".line\"), startVal = el.dataset.startPos || \"center bottom\", endVal = el.dataset.endPos || \"bottom center\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0, withScrollTrigger = el.dataset.withScroll || false;\n        // let tl = gsap.timeline({ paused: true });\n        $1aa2e0393d0f1beb$var$createScrollTrigger(el, words1, startVal, endVal, stagger, delay, withScrollTrigger);\n    });\n}\n\n\n// Link timelines to scroll position\nfunction $4013e65a83b1b778$var$createScrollList(triggerElement, elements, start, stagger, delay) {\n    gsap.set(elements, {\n        yPercent: 100,\n        opacity: 0\n    });\n    gsap.timeline({\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: start,\n            onEnter: ()=>{\n                gsap.to(elements, {\n                    yPercent: 0,\n                    opacity: 1,\n                    stagger: stagger,\n                    ease: \"power4.out\",\n                    delay: Number(delay)\n                });\n            }\n        }\n    });\n}\nfunction $4013e65a83b1b778$export$9b05384e3b3cbff1() {\n    const list = document.querySelectorAll(\"[stagger-list]\");\n    if (!list) return;\n    list.forEach((el)=>{\n        const elements = el.querySelectorAll(\"[stagger-el]\"), startVal = el.dataset.startPos || \"top bottom\", stagger = el.dataset.stagger || 0.05, delay = el.dataset.delay || 0;\n        if (!elements) return;\n        $4013e65a83b1b778$var$createScrollList(el, elements, startVal, stagger, delay);\n    });\n}\n\n\nfunction $8dde7174b81b4982$export$1744cb1794fd120a() {\n    const buttons = document.querySelectorAll('.button');\n    buttons.forEach((button)=>{\n        // if button doesn't include a .button_icon, return\n        if (!button.querySelector('.button_icon')) return;\n        // use GSAP + DrawSVG plugin to animate the button icon path with mouse hover\n        const icon = button.querySelector('.button_icon');\n        const path = icon.querySelector('path');\n        const tl = gsap.timeline({\n            paused: true\n        });\n        tl.to(path, {\n            duration: 0.3,\n            ease: \"expo.inOut\",\n            drawSVG: \"100% 100%\"\n        }).set(path, {\n            drawSVG: \"0%\"\n        }).to(path, {\n            duration: 0.3,\n            ease: \"expo.inOut\",\n            drawSVG: \"100%\"\n        });\n        button.addEventListener('mouseenter', ()=>{\n            tl.play();\n        });\n        button.addEventListener('mouseleave', ()=>{\n            tl.reverse();\n        });\n    });\n}\n\n\nfunction $ee20a49b40292314$export$22ea07d0c2ddb570() {\n    // apply a \".is-active\" class to the \".navbar_component\" element if the user has scrolled past the top of the page,\n    // otherwise remove the \".is-active\" class. Also, apply a \".is-active\" class to the \".navbar_component\" element if the user\n    // clicks on any elements with the \".navbar_link.is-dropdown\" class, otherwise remove the \".is-active\" class.\n    const navbar = document.querySelector(\".navbar_component\");\n    const dropdowns = document.querySelectorAll(\".navbar_link.is-dropdown\");\n    const mobileTrigger = document.querySelector(\".navbar_mobile-trigger\");\n    const mobileMenu = document.querySelector(\".navbar_menu\");\n    let isScrolling = false;\n    window.addEventListener(\"scroll\", ()=>{\n        if (!isScrolling) window.requestAnimationFrame(()=>{\n            isDropdownOpen();\n            isScrolling = false;\n        });\n        isScrolling = true;\n    });\n    isDropdownOpen();\n    let currentDropdown = null;\n    // checks if there's any dropdown open, and if so, keeps the navbar active. Otherwise, removes the active class\n    function isDropdownOpen() {\n        const isOpen = Array.from(dropdowns).some((dropdown)=>dropdown.classList.contains(\"is-active\"));\n        // only remove the active class if the user has not scrolled to the top of the page, none of the dropdowns are open, and the mobile menu is not open\n        if (!isOpen && window.scrollY === 0 && !mobileMenu.classList.contains(\"is-active\")) navbar.classList.remove(\"is-active\");\n        else navbar.classList.add(\"is-active\");\n    }\n    const dropdownsTimelines = [];\n    dropdowns.forEach((dropdown, i)=>{\n        const submenu = dropdown.nextElementSibling;\n        if (!submenu) return;\n        // create a timeline for each submenu. Execute the isDropdownOpen function if the submenu timeline is reversed, once it's completed.\n        const submenuTl = gsap.timeline({\n            paused: true,\n            onStart: isDropdownOpen,\n            onReverseComplete: isDropdownOpen\n        });\n        submenuTl.fromTo(submenu, {\n            height: 0\n        }, {\n            height: \"auto\",\n            duration: 0.5,\n            ease: \"expo.inOut\"\n        });\n        if (submenu.querySelector(\".big-links_list\")) submenuTl.from(submenu.querySelectorAll(\".big-links_list a\"), {\n            yPercent: 10,\n            opacity: 0,\n            duration: 0.2,\n            stagger: 0.1\n        }, 0);\n        dropdownsTimelines.push(submenuTl);\n        // closes all submenus (playing their respective timelines) and opens the submenu that was clicked\n        function toggleSubmenu() {\n            if (currentDropdown && currentDropdown !== dropdown) {\n                dropdownsTimelines.forEach((timeline)=>timeline.reverse());\n                currentDropdown.classList.remove(\"is-active\");\n            }\n            if (submenuTl.progress() === 1) submenuTl.reverse();\n            else submenuTl.play();\n            if (currentDropdown === dropdown) {\n                currentDropdown.classList.remove(\"is-active\");\n                currentDropdown = null;\n            } else {\n                currentDropdown = dropdown;\n                currentDropdown.classList.add(\"is-active\");\n            }\n        }\n        dropdown.addEventListener(\"click\", toggleSubmenu);\n    });\n    // close the submenu if the user clicks outside of the navbar\n    document.addEventListener(\"click\", (e)=>{\n        if (!navbar.contains(e.target)) {\n            dropdownsTimelines.forEach((timeline)=>timeline.reverse());\n            currentDropdown?.classList.remove(\"is-active\");\n            currentDropdown = null;\n        }\n    });\n    //if browser is mobile (max-width: 991px), add logic to make the .navbar_mobile-trigger element toggle the .is-active class on the .navbar_menu element.\n    // Use GSAP to also animate the .navbar_menu element height from 0 to auto when the .is-active class is added, and from auto to 0 when the .is-active class is removed.\n    //set gsap.matchMedia instance to detect mobile breakpoint\n    const mm = gsap.matchMedia();\n    mm.add({\n        small: \"(max-width: 991px)\"\n    }, (ctx)=>{\n        if (ctx.conditions.small) initializeMobileMenu();\n    });\n    function initializeMobileMenu() {\n        // To calculate the max-height of the mobile menu, we need to get the .navbar_component and subtract from the window.innerHeight\n        const navbarHeight = navbar.offsetHeight;\n        // set the navbar height as a CSS variable\n        document.documentElement.style.setProperty(\"--navbar-height\", `${navbarHeight}px`);\n        if (mobileTrigger && mobileMenu) {\n            const pathOpen = mobileTrigger.querySelectorAll(\".menu-path-open\");\n            const pathClose = mobileTrigger.querySelectorAll(\".menu-path-close\");\n            const triggerLabels = mobileTrigger.querySelectorAll(\".navbar_mobile-trigger-label\");\n            gsap.set(pathClose, {\n                drawSVG: \"0% 0%\"\n            });\n            gsap.set(pathOpen, {\n                drawSVG: \"0% 100%\"\n            });\n            const mobileMenuTl = gsap.timeline({\n                paused: true\n            });\n            mobileMenuTl.to(pathOpen, {\n                drawSVG: \"100% 100%\",\n                duration: 0.3,\n                stagger: 0.1,\n                ease: \"expo.inOut\"\n            }).to(pathClose, {\n                drawSVG: \"100% 0%\",\n                duration: 0.5,\n                ease: \"expo.inOut\"\n            });\n            mobileMenuTl.to(triggerLabels, {\n                yPercent: -100,\n                duration: 0.3,\n                stagger: 0.1,\n                ease: \"expo.inOut\"\n            }, 0);\n            mobileTrigger.addEventListener(\"click\", ()=>{\n                mobileMenu.classList.toggle(\"is-active\");\n                gsap.to(mobileMenu, {\n                    height: mobileMenu.classList.contains(\"is-active\") ? \"auto\" : 0,\n                    duration: 0.5,\n                    ease: \"expo.inOut\"\n                });\n                if (mobileMenu.classList.contains(\"is-active\")) mobileMenuTl.play();\n                else mobileMenuTl.reverse();\n            });\n        }\n        // close the mobile menu if the user clicks outside of it\n        document.addEventListener(\"click\", (e)=>{\n            if (!navbar.contains(e.target)) {\n                mobileMenu.classList.remove(\"is-active\");\n                gsap.to(mobileMenu, {\n                    height: 0,\n                    duration: 0.5,\n                    ease: \"expo.inOut\"\n                });\n            }\n        });\n        // add the .is-active class to the .navbar_component element if .navbar_mobile-trigger is clicked and the scroll position is at the top of the page\n        mobileTrigger.addEventListener(\"click\", ()=>{\n            if (window.scrollY === 0) navbar.classList.toggle(\"is-active\");\n        });\n    }\n}\n\n\nfunction $83ae171d5a192456$export$e125e88f659d8ab1() {\n    const paths = document.querySelectorAll(\"[path-animation]\");\n    if (!paths) return;\n    // set svg path animation using GSAP, ScrollTrigger and DrawSVG plugins\n    paths.forEach((path)=>{\n        const tl = gsap.timeline({\n            paused: true,\n            defaults: {\n                duration: 1,\n                ease: \"expo.inOut\"\n            }\n        });\n        tl.fromTo(path.querySelector(\"path\"), {\n            drawSVG: \"0%\"\n        }, {\n            drawSVG: \"100%\"\n        });\n        ScrollTrigger.create({\n            trigger: path,\n            start: \"top center\",\n            animation: tl,\n            toggleActions: \"play none none none\"\n        });\n    });\n}\n\n\nfunction $0cd6a27b99afe986$export$568421ea5e873446() {\n    const items = document.querySelectorAll(\".video-player-full\");\n    if (!items) return;\n    items.forEach((item)=>{\n        const trigger = item.querySelector(\".video-player-full_trigger\"), modal = item.querySelector(\".video-player-full_modal\");\n        if (!trigger || !modal) return;\n        const close = modal.querySelector(\".video-player-full_modal-close\");\n        const tl = $0cd6a27b99afe986$var$setVideoModal(modal);\n        let player;\n        if (typeof Vimeo !== \"undefined\") {\n            player = new Vimeo.Player(modal.querySelector('iframe'));\n            tl.eventCallback(\"onComplete\", ()=>{\n                player.play();\n            });\n            tl.eventCallback(\"onReverseComplete\", ()=>{\n                player.setCurrentTime(0);\n            });\n        }\n        trigger.addEventListener(\"click\", ()=>{\n            $0cd6a27b99afe986$var$openModal(tl);\n        });\n        close.addEventListener(\"click\", ()=>{\n            if (player) player.pause();\n            $0cd6a27b99afe986$var$closeModal(tl);\n        });\n    });\n}\nfunction $0cd6a27b99afe986$var$setVideoModal(modal) {\n    videoPlayer = modal.querySelector(\".video-player-full_modal-inner\"), videoClose = modal.querySelector(\".video-player-full_modal-close\");\n    gsap.set(modal, {\n        visibility: \"hidden\",\n        maskPosition: \"0% 0%\"\n    });\n    gsap.set(videoClose, {\n        y: \"-10rem\"\n    });\n    const tl = gsap.timeline({\n        paused: true\n    });\n    tl.to(modal, {\n        maskPosition: \"100% 0%\",\n        visibility: \"visible\",\n        duration: 1,\n        ease: \"expo.inOut\"\n    }, 0).to(videoClose, {\n        y: \"0rem\",\n        duration: 1,\n        ease: \"expo.inOut\"\n    }, 0.2);\n    return tl;\n}\nasync function $0cd6a27b99afe986$var$openModal(tl) {\n    tl.play();\n}\nfunction $0cd6a27b99afe986$var$closeModal(tl) {\n    tl.reverse();\n}\n\n\n// wait until DOM is ready (html and svg markup)\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    (0, $ee20a49b40292314$export$22ea07d0c2ddb570)();\n    (0, $8dde7174b81b4982$export$1744cb1794fd120a)();\n    (0, $4013e65a83b1b778$export$9b05384e3b3cbff1)();\n    (0, $83ae171d5a192456$export$e125e88f659d8ab1)();\n    // initFormSubmit();\n    // initContactForm();\n    (0, $0cd6a27b99afe986$export$568421ea5e873446)();\n});\ndocument.fonts.ready.then(()=>{\n    (0, $1aa2e0393d0f1beb$export$1601281ad392a6d8)();\n    (0, $719658c63b791dcb$export$f8b3d1cda34ef9a8)();\n    (0, $ce6a18b12420bce7$export$7fd17f34fe72f4b0)();\n});\n\n})();\n//# sourceMappingURL=globals.js.map\n","import { setLoadingStates } from \"./modules/setLoadingStates\";\nimport { setRevealHeading } from \"./modules/staggerHeading\";\nimport { setStaggerText } from \"./modules/staggerText\";\nimport { setStaggerElements } from \"./modules/staggerElements\";\nimport { initButtons } from \"./modules/buttons\";\nimport { initMenu } from \"./modules/menu\";\nimport { setPathAnimations } from \"./modules/setPathAnimation\";\n// import { initFormSubmit } from \"./modules/formSubmit\";\n// import { initContactForm } from \"./modules/contactForm\";\nimport { setVideosModal } from \"./modules/videoModal\";\n\n// wait until DOM is ready (html and svg markup)\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  initMenu();\n  initButtons();\n  setStaggerElements();\n  setPathAnimations();\n  // initFormSubmit();\n  // initContactForm();\n  setVideosModal();\n});\n\ndocument.fonts.ready.then(() => {\n  setStaggerText();\n  setRevealHeading();\n  setLoadingStates();\n});\n","export function setLoadingStates() {\n  const loading = document.querySelector(\".loading-wrapper\");\n  if (!loading) {\n    return;\n  }\n\n  const logo = loading.querySelector(\".loading_logo\");\n  const logoCircle = logo.querySelector(\"circle\");\n  const logoPath = logo.querySelector(\"path\");\n\n  gsap.set(logoCircle, { drawSVG: \"0 100% live\" });\n  gsap.set(logoPath, { drawSVG: \"0 100% live\" });\n\n  gsap.to(logoCircle, {\n    drawSVG: \"100% 100% live\",\n    duration: 1,\n    ease: \"expo.out\",\n  });\n  gsap.to(logoPath, {\n    drawSVG: \"100% 100% live\",\n    duration: 1,\n    ease: \"expo.out\",\n  });\n  gsap.to(loading, {\n    maskPosition: \"100% 100%\",\n    duration: 1,\n    delay: 0.5,\n    ease: \"expo.out\",\n    onComplete: () => {\n      loading.style.display = \"none\";\n      gsap.set(logoCircle, { drawSVG: \"0% 0% live\" });\n      gsap.set(logoPath, { drawSVG: \"0% 0% live\" });\n      gsap.set(loading, { maskPosition: \"0% 100%\" });\n    },\n  });\n\n  // Loading animation\n  const links = document.querySelectorAll(\"a\");\n  links.forEach((l) => {\n    l.addEventListener(\"click\", (e) => {\n      // e.preventDefault();\n      const href = l.href;\n      const url = new URL(href);\n\n      if (\n        window.location.origin === url.origin &&\n        window.location.pathname !== url.pathname &&\n        l.target !== \"_blank\"\n      ) {\n        e.preventDefault();\n\n        loading.style.display = \"block\";\n        gsap.to(logoCircle, {\n          drawSVG: \"0% 100% live\",\n          duration: 0.5,\n          delay: 0.5,\n          ease: \"expo.out\",\n        });\n        gsap.to(logoPath, {\n          drawSVG: \"0% 100% live\",\n          duration: 0.5,\n          delay: 0.5,\n          ease: \"expo.out\",\n        });\n        gsap.to(loading, {\n          maskPosition: \"50% 100%\",\n          duration: 1,\n          ease: \"expo.out\",\n          onComplete: () => {\n            window.location.href = href;\n          },\n        });\n\n        // setTimeout(() => {\n        //   window.location.href = href;\n        // }, 500);\n      }\n    });\n  });\n}\n","// Link timelines to scroll position\nexport function createScrollTrigger(el, triggerEl, start, end, delay, withScroll) {\n  const wrapper = document.createElement(\"div\");\n  wrapper.classList.add(\"reveal-heading_wrapper\");\n  el.parentNode.insertBefore(wrapper, el);\n  const transparent = el.cloneNode(true);\n  wrapper.appendChild(el);\n  wrapper.appendChild(transparent);\n  transparent.classList.add('transparent');\n  // transparent.removeAttribute('revealHeading');\n\n  gsap.set(el, { opacity: 0 });\n  gsap.set(transparent, { backgroundPositionX: \"0%\" });\n\n  const trigger = {\n    trigger: triggerEl,\n    scrub: true,\n    once: true,\n    start,\n    fastScrollEnd: 500,\n    preventOverlaps: \"scroll-headings\",\n  };\n\n  if (!withScroll) {\n    const tl = gsap.timeline({ paused: true });\n\n    trigger.onEnter = () => {\n      tl\n      .to(transparent, {\n        backgroundPositionX: \"50%\",\n        delay,\n        duration: 0.5,\n        overwrite: \"auto\",\n        ease: \"expo.out\",\n        onComplete: () => {\n          gsap.set(el,{ opacity: 1 })\n        }\n      })\n        .to(transparent, {\n          backgroundPositionX: \"100%\",\n          duration: 0.5,\n          overwrite: \"auto\",\n          ease: \"expo.out\",\n          onComplete: () => {\n            transparent.remove();\n          },\n        });\n\n      tl.play();\n    };\n\n    gsap.timeline({ scrollTrigger: trigger });\n  } else {\n    trigger.end = end;\n    gsap\n      .timeline({\n        scrollTrigger: trigger,\n      })\n      .to(transparent, {\n        backgroundPositionX: \"50%\",\n        delay,\n        duration: 0.3,\n        overwrite: \"auto\",\n        ease: \"expo.out\",\n        onComplete: () => {\n          gsap.set(el, { opacity: 1 });\n        },\n      })\n      .to(transparent, {\n        backgroundPositionX: \"100%\",\n        duration: 0.3,\n        overwrite: \"auto\",\n        ease: \"expo.out\",\n        onComplete: () => {\n          transparent.remove();\n        },\n      });\n  }\n}\n\nexport function setRevealHeading() {\n  const blocks = document.querySelectorAll(\"[reveal-heading]\");\n\n  blocks.forEach((el) => {\n    el.classList.add('init');\n    const startVal = el.dataset.startPos || \"center bottom\",\n      endVal = el.dataset.endPos || \"bottom center\",\n      delay = el.dataset.delay || 0.2,\n      withScrollTrigger = el.dataset.withScroll || false;\n    createScrollTrigger(el, el, startVal, endVal, delay, withScrollTrigger);\n  });\n}\n","import { setLinesWrapper } from \"./setLinesWrapper\";\n\n// Link timelines to scroll position\nfunction createScrollTrigger(triggerElement, elements, start, end, stagger, delay, withScroll) {\n  const trigger = {\n    trigger: triggerElement,\n    scrub: true,\n    start,\n    fastScrollEnd: 500,\n    preventOverlaps: \"scroll-text\",\n  };\n\n  if (!withScroll) {\n    trigger.onEnter = () => {\n      gsap.to(elements, {\n        yPercent: 0,\n        stagger: stagger,\n        ease: \"power4.out\",\n        delay: Number(delay),\n      });\n    };\n\n    gsap.timeline({ scrollTrigger: trigger });\n  } else {\n    trigger.end = end;\n    gsap\n      .timeline({\n        scrollTrigger: trigger,\n      })\n      .to(words, {\n        yPercent: 0,\n        stagger: stagger,\n        ease: \"none\",\n      });\n  }\n}\n\nexport function setStaggerText() {\n  // Split all words on the brand core section\n  const textEls = document.querySelectorAll('[stagger-text]');\n\n  textEls.forEach((el) => {\n    if (el.classList.contains('w-richtext')) {\n      const staggerTextEls = new SplitType(el.querySelectorAll('p, li, h2, h3'), {\n        types: \"lines\",\n        tagName: \"span\",\n      });\n      setLinesWrapper(staggerTextEls.lines, () => {\n        gsap.set(staggerTextEls.lines, { yPercent: 100 });\n      });\n    } else {\n      const staggerTextEls = new SplitType(el, {\n        types: \"lines\",\n        tagName: \"span\",\n      });\n      setLinesWrapper(staggerTextEls.lines, () => {\n        gsap.set(staggerTextEls.lines, { yPercent: 100 });\n      });\n    }\n  })\n\n  const textBlocks = document.querySelectorAll(\"[stagger-text]\");\n\n  textBlocks.forEach((el) => {\n    el.classList.add(\"init\");\n    const words = el.querySelectorAll(\".line\"),\n      startVal = el.dataset.startPos || \"center bottom\",\n      endVal = el.dataset.endPos || \"bottom center\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0,\n      withScrollTrigger = el.dataset.withScroll || false;\n    // let tl = gsap.timeline({ paused: true });\n    createScrollTrigger(el, words, startVal, endVal, stagger, delay, withScrollTrigger);\n  });\n}\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","// Link timelines to scroll position\nfunction createScrollList(\n  triggerElement,\n  elements,\n  start,\n  stagger,\n  delay,\n) {\n  gsap.set(elements, {\n    yPercent: 100,\n    opacity: 0,\n  })\n\n  gsap.timeline({\n    scrollTrigger: {\n      trigger: triggerElement,\n      scrub: true,\n      start,\n      onEnter: () => {\n        gsap.to(elements, {\n          yPercent: 0,\n          opacity: 1,\n          stagger,\n          ease: \"power4.out\",\n          delay: Number(delay),\n        });\n      },\n    },\n  });\n}\n\nexport function setStaggerElements() {\n  const list = document.querySelectorAll(\"[stagger-list]\");\n\n  if (!list) {\n    return;\n  }\n\n  list.forEach((el) => {\n    const elements = el.querySelectorAll(\"[stagger-el]\"),\n      startVal = el.dataset.startPos || \"top bottom\",\n      stagger = el.dataset.stagger || 0.05,\n      delay = el.dataset.delay || 0;\n    \n    if (!elements) {\n      return;\n    }\n    \n    createScrollList(el, elements, startVal, stagger, delay);\n  });\n}\n","export function initButtons() {\n  const buttons = document.querySelectorAll('.button');\n  buttons.forEach(button => {\n    // if button doesn't include a .button_icon, return\n    if (!button.querySelector('.button_icon')) return;\n\n    // use GSAP + DrawSVG plugin to animate the button icon path with mouse hover\n    const icon = button.querySelector('.button_icon');\n    const path = icon.querySelector('path');\n\n    const tl = gsap.timeline({ paused: true });\n    tl\n      .to(path, { duration: 0.3, ease: \"expo.inOut\", drawSVG: \"100% 100%\" })\n      .set(path, { drawSVG: \"0%\" })\n      .to(path, { duration: 0.3, ease: \"expo.inOut\", drawSVG: \"100%\" });\n\n    button.addEventListener('mouseenter', () => {\n      tl.play();\n    });\n\n    button.addEventListener('mouseleave', () => {\n      tl.reverse();\n    });\n  });\n}","export function initMenu() {\n  // apply a \".is-active\" class to the \".navbar_component\" element if the user has scrolled past the top of the page,\n  // otherwise remove the \".is-active\" class. Also, apply a \".is-active\" class to the \".navbar_component\" element if the user\n  // clicks on any elements with the \".navbar_link.is-dropdown\" class, otherwise remove the \".is-active\" class.\n  const navbar = document.querySelector(\".navbar_component\");\n  const dropdowns = document.querySelectorAll(\".navbar_link.is-dropdown\");\n  const mobileTrigger = document.querySelector(\".navbar_mobile-trigger\");\n  const mobileMenu = document.querySelector(\".navbar_menu\");\n\n  let isScrolling = false;\n\n  window.addEventListener(\"scroll\", () => {\n    if (!isScrolling) {\n      window.requestAnimationFrame(() => {\n        isDropdownOpen();\n        isScrolling = false;\n      });\n    }\n    isScrolling = true;\n  });\n\n  isDropdownOpen();\n\n  let currentDropdown = null;\n\n  // checks if there's any dropdown open, and if so, keeps the navbar active. Otherwise, removes the active class\n  function isDropdownOpen() {\n    const isOpen = Array.from(dropdowns).some((dropdown) =>\n      dropdown.classList.contains(\"is-active\")\n    );\n\n    // only remove the active class if the user has not scrolled to the top of the page, none of the dropdowns are open, and the mobile menu is not open\n    if (!isOpen && window.scrollY === 0 && !mobileMenu.classList.contains(\"is-active\")) {\n      navbar.classList.remove(\"is-active\");\n    } else {\n      navbar.classList.add(\"is-active\");\n    }\n  }\n\n  const dropdownsTimelines = [];\n\n  dropdowns.forEach((dropdown, i) => {\n    const submenu = dropdown.nextElementSibling;\n\n    if (!submenu) {\n      return;\n    }\n\n    // create a timeline for each submenu. Execute the isDropdownOpen function if the submenu timeline is reversed, once it's completed.\n    const submenuTl = gsap.timeline({\n      paused: true,\n      onStart: isDropdownOpen,\n      onReverseComplete: isDropdownOpen,\n    });\n\n    submenuTl.fromTo(\n      submenu,\n      { height: 0 },\n      { height: \"auto\", duration: 0.5, ease: \"expo.inOut\" }\n    );\n\n    if (submenu.querySelector(\".big-links_list\")) {\n      submenuTl.from(\n        submenu.querySelectorAll(\".big-links_list a\"),\n        { yPercent: 10, opacity: 0, duration: 0.2, stagger: 0.1 },\n        0\n      );\n    }\n\n    dropdownsTimelines.push(submenuTl);\n\n    // closes all submenus (playing their respective timelines) and opens the submenu that was clicked\n    function toggleSubmenu() {\n      if (currentDropdown && currentDropdown !== dropdown) {\n        dropdownsTimelines.forEach((timeline) => timeline.reverse());\n        currentDropdown.classList.remove(\"is-active\");\n      }\n\n      if (submenuTl.progress() === 1) {\n        submenuTl.reverse();\n      } else {\n        submenuTl.play();\n      }\n\n      if (currentDropdown === dropdown) {\n        currentDropdown.classList.remove(\"is-active\");\n        currentDropdown = null;\n      } else {\n        currentDropdown = dropdown;\n        currentDropdown.classList.add(\"is-active\");\n      }\n    }\n\n    dropdown.addEventListener(\"click\", toggleSubmenu);\n  });\n\n  // close the submenu if the user clicks outside of the navbar\n  document.addEventListener(\"click\", (e) => {\n    if (!navbar.contains(e.target)) {\n      dropdownsTimelines.forEach((timeline) => timeline.reverse());\n      currentDropdown?.classList.remove(\"is-active\");\n      currentDropdown = null;\n    }\n  });\n\n  //if browser is mobile (max-width: 991px), add logic to make the .navbar_mobile-trigger element toggle the .is-active class on the .navbar_menu element.\n  // Use GSAP to also animate the .navbar_menu element height from 0 to auto when the .is-active class is added, and from auto to 0 when the .is-active class is removed.\n\n  //set gsap.matchMedia instance to detect mobile breakpoint\n  const mm = gsap.matchMedia();\n\n  mm.add(\n    {\n      small: \"(max-width: 991px)\",\n    },\n    (ctx) => {\n      if (ctx.conditions.small) {\n        initializeMobileMenu();\n      }\n    }\n  );\n\n  function initializeMobileMenu() {\n    // To calculate the max-height of the mobile menu, we need to get the .navbar_component and subtract from the window.innerHeight\n    const navbarHeight = navbar.offsetHeight;\n    // set the navbar height as a CSS variable\n    document.documentElement.style.setProperty(\n      \"--navbar-height\",\n      `${navbarHeight}px`\n    );\n\n    if (mobileTrigger && mobileMenu) {\n      const pathOpen = mobileTrigger.querySelectorAll(\".menu-path-open\");\n      const pathClose = mobileTrigger.querySelectorAll(\".menu-path-close\");\n      const triggerLabels = mobileTrigger.querySelectorAll(\".navbar_mobile-trigger-label\");\n\n      gsap.set(pathClose, { drawSVG: \"0% 0%\" });\n      gsap.set(pathOpen, { drawSVG: \"0% 100%\" });\n\n      const mobileMenuTl = gsap.timeline({\n        paused: true,\n      });\n\n      mobileMenuTl\n        .to(pathOpen, {\n          drawSVG: \"100% 100%\",\n          duration: 0.3,\n          stagger: 0.1,\n          ease: \"expo.inOut\",\n        })\n        .to(pathClose, {\n          drawSVG: \"100% 0%\",\n          duration: 0.5,\n          ease: \"expo.inOut\",\n        });\n      \n      mobileMenuTl.to(triggerLabels, {\n        yPercent: -100,\n        duration: 0.3,\n        stagger: 0.1,\n        ease: \"expo.inOut\",\n      }, 0);\n\n      mobileTrigger.addEventListener(\"click\", () => {\n        mobileMenu.classList.toggle(\"is-active\");\n\n        gsap.to(mobileMenu, {\n          height: mobileMenu.classList.contains(\"is-active\") ? \"auto\" : 0,\n          duration: 0.5,\n          ease: \"expo.inOut\",\n        });\n\n        if (mobileMenu.classList.contains(\"is-active\")) {\n          mobileMenuTl.play();\n        } else {\n          mobileMenuTl.reverse();\n        }\n      });\n    }\n    // close the mobile menu if the user clicks outside of it\n    document.addEventListener(\"click\", (e) => {\n      if (!navbar.contains(e.target)) {\n        mobileMenu.classList.remove(\"is-active\");\n        gsap.to(mobileMenu, {\n          height: 0,\n          duration: 0.5,\n          ease: \"expo.inOut\",\n        });\n      }\n    });\n\n    // add the .is-active class to the .navbar_component element if .navbar_mobile-trigger is clicked and the scroll position is at the top of the page\n    mobileTrigger.addEventListener(\"click\", () => {\n      if (window.scrollY === 0) {\n        navbar.classList.toggle(\"is-active\");\n      }\n    });  \n\n  }\n}","export function setPathAnimations() {\n  const paths = document.querySelectorAll(\"[path-animation]\");\n\n  if (!paths) {\n    return;\n  }\n\n  // set svg path animation using GSAP, ScrollTrigger and DrawSVG plugins\n  paths.forEach((path) => {\n    const tl = gsap.timeline({\n      paused: true,\n      defaults: { duration: 1, ease: \"expo.inOut\" },\n    });\n\n    tl.fromTo(path.querySelector(\"path\"), \n      { drawSVG: \"0%\" },\n      { drawSVG: \"100%\" },\n    );\n\n    ScrollTrigger.create({\n      trigger: path,\n      start: \"top center\",\n      animation: tl,\n      toggleActions: \"play none none none\",\n    });\n  });\n}","export function setVideosModal() {\n  const items = document.querySelectorAll(\".video-player-full\");\n\n  if (!items) {\n    return;\n  }\n\n  items.forEach((item) => {\n    const trigger = item.querySelector(\".video-player-full_trigger\"),\n      modal = item.querySelector(\".video-player-full_modal\");\n\n    if (!trigger || !modal) {\n      return;\n    }\n\n    const close = modal.querySelector(\".video-player-full_modal-close\");\n    const tl = setVideoModal(modal);\n\n    let player;\n    if (typeof Vimeo !== \"undefined\") {\n      player = new Vimeo.Player(modal.querySelector('iframe'));\n      tl.eventCallback(\"onComplete\", () => {\n        player.play();\n      });\n      tl.eventCallback(\"onReverseComplete\", () => {\n        player.setCurrentTime(0);\n      });\n    }\n    \n    trigger.addEventListener(\"click\", () => {\n      openModal(tl)\n    });\n    close.addEventListener(\"click\", () => {\n      if (player) {\n        player.pause();\n      }\n      closeModal(tl)\n    });\n  });\n}\n\nfunction setVideoModal(modal) {\n    videoPlayer = modal.querySelector(\".video-player-full_modal-inner\"),\n    videoClose = modal.querySelector(\".video-player-full_modal-close\");\n\n  gsap.set(modal, { visibility: \"hidden\", maskPosition: \"0% 0%\" });\n  gsap.set(videoClose, { y: \"-10rem\" });\n\n  const tl = gsap.timeline({ paused: true });\n\n  tl\n    .to(\n      modal,\n      {\n        maskPosition: \"100% 0%\",\n        visibility: \"visible\",\n        duration: 1,\n        ease: \"expo.inOut\",\n      },\n      0\n    )\n    .to(\n      videoClose,\n      {\n        y: \"0rem\",\n        duration: 1,\n        ease: \"expo.inOut\",\n      },\n      0.2\n    );\n\n  return tl;\n}\n\nasync function openModal(tl) {\n  tl.play();\n}\n\nfunction closeModal(tl) {\n  tl.reverse();\n}\n"],"names":["$1c7845f0e1de0887$export$8f060496e19d4bbb","lines","callback","forEach","line","wrapper","document","createElement","classList","add","parentNode","insertBefore","appendChild","$0cd6a27b99afe986$var$openModal","tl","play","addEventListener","navbar","querySelector","dropdowns","querySelectorAll","mobileTrigger","mobileMenu","isScrolling","window","requestAnimationFrame","isDropdownOpen","currentDropdown","Array","from","some","dropdown","contains","scrollY","remove","dropdownsTimelines","i","submenu","nextElementSibling","submenuTl","gsap","timeline","paused","onStart","onReverseComplete","fromTo","height","duration","ease","yPercent","opacity","stagger","push","reverse","progress","e","target","mm","matchMedia","small","ctx","conditions","initializeMobileMenu","navbarHeight","offsetHeight","documentElement","style","setProperty","pathOpen","pathClose","triggerLabels","set","drawSVG","mobileMenuTl","to","toggle","buttons","button","path","icon","list","el","elements","startVal","dataset","startPos","delay","scrollTrigger","trigger","scrub","start","onEnter","Number","paths","defaults","ScrollTrigger","create","animation","toggleActions","items","item","player","modal","close","$0cd6a27b99afe986$var$setVideoModal","videoPlayer","videoClose","visibility","maskPosition","y","Vimeo","Player","eventCallback","setCurrentTime","pause","$0cd6a27b99afe986$var$closeModal","fonts","ready","then","textEls","staggerTextEls","SplitType","types","tagName","textBlocks","words1","endVal","endPos","withScrollTrigger","withScroll","$1aa2e0393d0f1beb$var$createScrollTrigger","triggerElement","end","fastScrollEnd","preventOverlaps","words","blocks","$719658c63b791dcb$export$48ba2fbf80d9a7d","triggerEl","transparent","cloneNode","backgroundPositionX","once","overwrite","onComplete","loading","logo","logoCircle","logoPath","display","links","l","href","url","URL","location","origin","pathname","preventDefault"],"version":3,"file":"globals.js.map"}