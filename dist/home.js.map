{"mappings":"ACGA,SAAS,gBAAgB,CAAC,mBAAoB,YAG5C,AAAA,WCHA,IAAM,EAAa,IAAI,OAAO,oBAAqB,CACjD,cAAe,EACf,eAAgB,CAAA,EAChB,KAAM,CAAA,EACN,MAAO,IACP,WAAY,CAAA,EACZ,cAAe,CAAA,EACf,OAAQ,WAIR,eAAgB,CACd,KAAM,CAAE,OAAQ,CAAA,EAAM,UAAW,CAAC,KAAM,EAAG,GAAG,AAAC,EAC/C,KAAM,CAAE,UAAW,CAAC,OAAQ,EAAG,EAAE,AAAC,CACpC,EACA,SAAU,CACR,MAAO,IACP,qBAAsB,CAAA,CACxB,EACA,WAAY,CACV,GAAI,yBACJ,YAAa,gBACb,kBAAmB,YACnB,cAAe,MACf,UAAW,CAAA,CACb,EACA,WAAY,CACV,OAAQ,4BACR,OAAQ,2BACV,EACA,GAAI,CACF,UAAW,SAAU,CAAM,EACzB,IAAM,EAAS,EAAO,MAAM,AACP,CAAA,CAAM,CAAC,EAAO,WAAW,CAAC,CAE/C,EAAO,OAAO,CAAC,CAAC,EAAO,KAGrB,AAFmB,EAAM,gBAAgB,CAAC,uBAE/B,OAAO,CAAC,CAAC,EAAI,KACC,UAAU,MAAM,CAAC,EAAI,CAC1C,KAAM,QACN,KAAM,QACN,WAAY,OACZ,UAAW,CAAA,EACX,QAAS,AAAC,IACR,KAAK,GAAG,CAAC,EAAK,KAAK,CAAE,CAAE,SAAU,GAAI,EACvC,CACF,EACA,EACF,EACJ,CACF,CACF,GAGA,SAAS,IAEP,SACG,gBAAgB,CAAC,2BACjB,OAAO,CAAC,AAAC,GAAM,EAAE,KAAK,IAGzB,IAAM,EAAc,SAAS,aAAa,CACxC,0CAEF,GAAI,CAAC,EAAa,OAElB,IAAM,EAAM,EAAY,aAAa,CAAC,SACjC,IAEL,EAAI,KAAK,CAAG,CAAA,EACZ,EAAI,IAAI,GAAG,KAAK,CAAC,AAAC,GAAM,QAAQ,KAAK,CAAC,qBAAsB,IAC9D,CAwBA,SAAS,IACP,IACA,AAxBF,WACE,IAAM,EAAc,EAAW,MAAM,CAAC,EAAW,WAAW,CAAC,CACvD,EAAgB,EAAW,MAAM,CAAC,EAAW,aAAa,CAAC,CAE3D,EAAY,EAAY,gBAAgB,CAAC,6BACzC,EAAc,EAAc,gBAAgB,CAAC,6BAEnD,KAAK,EAAE,CAAC,EAAa,CACnB,SAAU,IACV,SAAU,EACV,KAAM,UACR,GACA,KAAK,EAAE,CAAC,EAAW,CACjB,SAAU,EACV,QAAS,IACT,KAAM,WACN,SAAU,CACZ,EAGF,GAKA,CAsBA,EAAW,EAAE,CAAC,cAAe,GAC7B,EAAW,EAAE,CAAC,2BAA4B,GAU1C,GACF,GDjIA","sources":["<anon>","src/home.js","src/home/setHeroSlider.js"],"sourcesContent":["(() => {\n// import { setHeroScroll, setHeroScrollFrame } from \"./home/setHeroScroll\";\nfunction $9497f2a671f918e6$export$cb8cc040b6eff225() {\n    // 1) Initialize Swiper\n    const heroSlider = new Swiper(\".swiper.home_hero\", {\n        slidesPerView: 1,\n        centeredSlides: true,\n        loop: true,\n        speed: 500,\n        grabCursor: true,\n        simulateTouch: true,\n        effect: \"creative\",\n        // fadeEffect: {\n        //   crossFade: false,\n        // },\n        creativeEffect: {\n            prev: {\n                shadow: true,\n                translate: [\n                    \"0%\",\n                    0,\n                    -1\n                ]\n            },\n            next: {\n                translate: [\n                    \"100%\",\n                    0,\n                    0\n                ]\n            }\n        },\n        autoplay: {\n            delay: 6000,\n            disableOnInteraction: false\n        },\n        pagination: {\n            el: \".swiper-bullet-wrapper\",\n            bulletClass: \"swiper-bullet\",\n            bulletActiveClass: \"is-active\",\n            bulletElement: \"div\",\n            clickable: true\n        },\n        navigation: {\n            nextEl: \".hero-slider_arrows .next\",\n            prevEl: \".hero-slider_arrows .prev\"\n        },\n        on: {\n            afterInit: function(swiper) {\n                const slides = swiper.slides;\n                const currentSlide = swiper[swiper.activeIndex];\n                slides.forEach((slide, i)=>{\n                    const staggerEls = slide.querySelectorAll('[data-hero-stagger]');\n                    staggerEls.forEach((el, i)=>{\n                        const staggerTextEls = SplitText.create(el, {\n                            type: \"lines\",\n                            mask: \"lines\",\n                            linesClass: \"line\",\n                            autoSplit: true,\n                            onSplit: (self)=>{\n                                gsap.set(self.lines, {\n                                    yPercent: 100\n                                });\n                            }\n                        });\n                    });\n                });\n            }\n        }\n    });\n    // 2) Pause all videos & play only the active one\n    function handleVideo() {\n        // pause every video under the hero slider\n        document.querySelectorAll(\".swiper.home_hero video\").forEach((v)=>v.pause());\n        // find active slide and its video\n        const activeSlide = document.querySelector(\".swiper.home_hero .swiper-slide-active\");\n        if (!activeSlide) return;\n        const vid = activeSlide.querySelector(\"video\");\n        if (!vid) return;\n        vid.muted = true;\n        vid.play().catch((e)=>console.error(\"Video play failed:\", e));\n    }\n    function handleStaggerText(swiper) {\n        const activeSlide = heroSlider.slides[heroSlider.activeIndex];\n        const previousSlide = heroSlider.slides[heroSlider.previousIndex];\n        const activeEls = activeSlide.querySelectorAll('[data-hero-stagger] .line');\n        const previousEls = previousSlide.querySelectorAll('[data-hero-stagger] .line');\n        gsap.to(previousEls, {\n            yPercent: 100,\n            duration: 1,\n            ease: \"expo.out\"\n        });\n        gsap.to(activeEls, {\n            yPercent: 0,\n            stagger: 0.05,\n            ease: \"expo.out\",\n            duration: 1\n        });\n    // updateMask();\n    }\n    function handleSlideChange() {\n        handleVideo();\n        handleStaggerText();\n    }\n    // function updateMask() {\n    //   const activeSlide = heroSlider.slides[heroSlider.activeIndex];\n    //   const previousSlide = heroSlider.slides[heroSlider.previousIndex];\n    //   gsap.fromTo(\n    //     activeSlide,\n    //     {\n    //       maskPosition: \"0%\",\n    //     },\n    //     {\n    //       maskPosition: \"50%\",\n    //       duration: 1,\n    //       ease: \"expo.out\",\n    //       onComplete: () => {\n    //         gsap.set(previousSlide, { maskPosition: \"0%\" });\n    //       },\n    //     }\n    //   );  \n    // }\n    // 3) Hook into Swiper events\n    heroSlider.on(\"slideChange\", handleVideo);\n    heroSlider.on(\"slideChangeTransitionEnd\", handleSlideChange);\n    // heroSlider.on(\"beforeTransitionStart\", () => {\n    //   const activeSlide = heroSlider.slides[heroSlider.activeIndex];\n    //   const previousSlide = heroSlider.slides[heroSlider.previousIndex];\n    //   gsap.set(previousSlide, { maskPosition: \"50%\" });\n    //   gsap.set(activeSlide, { maskPosition: \"0%\" });\n    // });\n    // 4) Kick off initial video state\n    handleSlideChange();\n}\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // setHeroScroll();\n    // setHeroScrollFrame();\n    (0, $9497f2a671f918e6$export$cb8cc040b6eff225)();\n});\n\n})();\n//# sourceMappingURL=home.js.map\n","// import { setHeroScroll, setHeroScrollFrame } from \"./home/setHeroScroll\";\nimport { initHomeSlider } from \"./home/setHeroSlider\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // setHeroScroll();\n  // setHeroScrollFrame();\n  initHomeSlider();\n});","export function initHomeSlider() {\r\n\r\n// 1) Initialize Swiper\r\n  const heroSlider = new Swiper(\".swiper.home_hero\", {\r\n    slidesPerView: 1,\r\n    centeredSlides: true,\r\n    loop: true,\r\n    speed: 500,\r\n    grabCursor: true,\r\n    simulateTouch: true,\r\n    effect: \"creative\",\r\n    // fadeEffect: {\r\n    //   crossFade: false,\r\n    // },\r\n    creativeEffect: {\r\n      prev: { shadow: true, translate: [\"0%\", 0, -1] },\r\n      next: { translate: [\"100%\", 0, 0] },\r\n    },\r\n    autoplay: {\r\n      delay: 6000,\r\n      disableOnInteraction: false,\r\n    },\r\n    pagination: {\r\n      el: \".swiper-bullet-wrapper\",\r\n      bulletClass: \"swiper-bullet\",\r\n      bulletActiveClass: \"is-active\",\r\n      bulletElement: \"div\",\r\n      clickable: true,\r\n    },\r\n    navigation: {\r\n      nextEl: \".hero-slider_arrows .next\",\r\n      prevEl: \".hero-slider_arrows .prev\",\r\n    },\r\n    on: {\r\n      afterInit: function (swiper) {\r\n        const slides = swiper.slides;\r\n        const currentSlide = swiper[swiper.activeIndex];\r\n        \r\n        slides.forEach((slide, i) => {\r\n          const staggerEls = slide.querySelectorAll('[data-hero-stagger]');\r\n\r\n          staggerEls.forEach((el, i) => {\r\n            const staggerTextEls = SplitText.create(el, {\r\n              type: \"lines\",\r\n              mask: \"lines\",\r\n              linesClass: \"line\",\r\n              autoSplit: true,\r\n              onSplit: (self) => {\r\n                gsap.set(self.lines, { yPercent: 100 });\r\n              },\r\n            });            \r\n            });\r\n          });\r\n      },\r\n    },\r\n  });\r\n\r\n  // 2) Pause all videos & play only the active one\r\n  function handleVideo() {\r\n    // pause every video under the hero slider\r\n    document\r\n      .querySelectorAll(\".swiper.home_hero video\")\r\n      .forEach((v) => v.pause());\r\n\r\n    // find active slide and its video\r\n    const activeSlide = document.querySelector(\r\n      \".swiper.home_hero .swiper-slide-active\"\r\n    );\r\n    if (!activeSlide) return;\r\n\r\n    const vid = activeSlide.querySelector(\"video\");\r\n    if (!vid) return;\r\n\r\n    vid.muted = true;\r\n    vid.play().catch((e) => console.error(\"Video play failed:\", e));\r\n  }\r\n\r\n  function handleStaggerText(swiper) {\r\n    const activeSlide = heroSlider.slides[heroSlider.activeIndex];\r\n    const previousSlide = heroSlider.slides[heroSlider.previousIndex];\r\n\r\n    const activeEls = activeSlide.querySelectorAll('[data-hero-stagger] .line');\r\n    const previousEls = previousSlide.querySelectorAll('[data-hero-stagger] .line');\r\n\r\n    gsap.to(previousEls, {\r\n      yPercent: 100,\r\n      duration: 1,\r\n      ease: \"expo.out\",\r\n    });\r\n    gsap.to(activeEls, {\r\n      yPercent: 0,\r\n      stagger: 0.05,\r\n      ease: \"expo.out\",\r\n      duration: 1,\r\n    });\r\n\r\n    // updateMask();\r\n  }\r\n\r\n  function handleSlideChange() {\r\n    handleVideo();\r\n    handleStaggerText();\r\n  }    \r\n\r\n  // function updateMask() {\r\n  //   const activeSlide = heroSlider.slides[heroSlider.activeIndex];\r\n  //   const previousSlide = heroSlider.slides[heroSlider.previousIndex];\r\n  //   gsap.fromTo(\r\n  //     activeSlide,\r\n  //     {\r\n  //       maskPosition: \"0%\",\r\n  //     },\r\n  //     {\r\n  //       maskPosition: \"50%\",\r\n  //       duration: 1,\r\n  //       ease: \"expo.out\",\r\n  //       onComplete: () => {\r\n  //         gsap.set(previousSlide, { maskPosition: \"0%\" });\r\n  //       },\r\n  //     }\r\n  //   );  \r\n  // }\r\n\r\n  // 3) Hook into Swiper events\r\n  heroSlider.on(\"slideChange\", handleVideo);\r\n  heroSlider.on(\"slideChangeTransitionEnd\", handleSlideChange);\r\n  // heroSlider.on(\"beforeTransitionStart\", () => {\r\n  //   const activeSlide = heroSlider.slides[heroSlider.activeIndex];\r\n  //   const previousSlide = heroSlider.slides[heroSlider.previousIndex];\r\n\r\n  //   gsap.set(previousSlide, { maskPosition: \"50%\" });\r\n  //   gsap.set(activeSlide, { maskPosition: \"0%\" });\r\n  // });\r\n\r\n  // 4) Kick off initial video state\r\n  handleSlideChange();    \r\n}\r\n"],"names":["document","addEventListener","heroSlider","Swiper","slidesPerView","centeredSlides","loop","speed","grabCursor","simulateTouch","effect","creativeEffect","prev","shadow","translate","next","autoplay","delay","disableOnInteraction","pagination","el","bulletClass","bulletActiveClass","bulletElement","clickable","navigation","nextEl","prevEl","on","afterInit","swiper","slides","activeIndex","forEach","slide","i","staggerEls","querySelectorAll","SplitText","create","type","mask","linesClass","autoSplit","onSplit","self","gsap","set","lines","yPercent","handleVideo","v","pause","activeSlide","querySelector","vid","muted","play","catch","e","console","error","handleSlideChange","handleStaggerText","previousSlide","previousIndex","activeEls","previousEls","to","duration","ease","stagger"],"version":3,"file":"home.js.map"}