{"mappings":"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","sources":["<anon>","src/home.js"],"sourcesContent":["(() => {\nfunction $0e149043dc8636b5$var$createHeroSlider() {\n    const slider = document.querySelector(\".home-slider_list\");\n    const slides = [\n        ...slider.querySelectorAll(\".home-slider_item\")\n    ];\n    const bullets = [\n        ...document.querySelectorAll(\".hero-slider_bullet\")\n    ];\n    const nextBtn = document.querySelector(\".is-slider-nav.next\");\n    const prevBtn = document.querySelector(\".is-slider-nav.prev\");\n    let current = 0;\n    let autoplayTimer;\n    const interval = 6; // seconds\n    // Utility to get video inside a slide\n    function getVideo(slide) {\n        return slide.querySelector(\".bg-video\");\n    }\n    // Step 1: Split all [data-hero-stagger] elements\n    slides.forEach((slide)=>{\n        const targets = slide.querySelectorAll(\"[data-hero-stagger]\");\n        targets.forEach((el)=>{\n            SplitText.create(el, {\n                type: \"lines\",\n                mask: \"lines\",\n                linesClass: \"line\",\n                autoSplit: true,\n                onSplit: (self)=>{\n                    gsap.set(self.lines, {\n                        yPercent: 100\n                    });\n                }\n            });\n        });\n    });\n    function animateTextIn(slide) {\n        const targets = slide.querySelectorAll(\"[data-hero-stagger] .line\");\n        gsap.to(targets, {\n            yPercent: 0,\n            duration: 0.5,\n            ease: \"power2.out\",\n            stagger: 0.06\n        });\n    }\n    function resetText(slide) {\n        const targets = slide.querySelectorAll(\"[data-hero-stagger] .line\");\n        gsap.set(targets, {\n            yPercent: 100\n        });\n    }\n    function animateBulletFill(index) {\n        const fills = document.querySelectorAll(\".hero-slider_bullet-fill\");\n        fills.forEach((fill, i)=>{\n            gsap.set(fill, {\n                scaleX: 0,\n                transformOrigin: \"left center\"\n            });\n            if (i === index) gsap.to(fill, {\n                scaleX: 1,\n                duration: interval,\n                ease: \"none\"\n            });\n        });\n    }\n    function goToSlide(index) {\n        if (index === current || gsap.isTweening(slides[current])) return;\n        const currentSlide = slides[current];\n        const nextSlide = slides[index];\n        const currentVideo = getVideo(currentSlide);\n        const nextVideo = getVideo(nextSlide);\n        // Kill active tweens\n        gsap.killTweensOf([\n            currentSlide,\n            nextSlide,\n            \".hero-slider_bullet-fill\"\n        ]);\n        slides.forEach((slide)=>slide.classList.remove(\"is-current\"));\n        bullets.forEach((b)=>b.classList.remove(\"is-current\"));\n        gsap.set(nextSlide, {\n            autoAlpha: 0,\n            zIndex: 2\n        });\n        // Play next slide's video immediately\n        if (nextVideo && nextVideo.paused) nextVideo.play();\n        gsap.to(currentSlide, {\n            autoAlpha: 0,\n            duration: 0.6\n        });\n        gsap.to(nextSlide, {\n            autoAlpha: 1,\n            duration: 0.6,\n            onStart: ()=>{\n                nextSlide.classList.add(\"is-current\");\n                bullets[index].classList.add(\"is-current\");\n                animateBulletFill(index);\n            },\n            onComplete: ()=>{\n                gsap.set(currentSlide, {\n                    zIndex: 1\n                });\n                // Pause previous slide's video\n                if (currentVideo && !currentVideo.paused) currentVideo.pause();\n                resetText(currentSlide);\n                animateTextIn(nextSlide);\n                current = index;\n            }\n        });\n    }\n    function nextSlide() {\n        goToSlide((current + 1) % slides.length);\n    }\n    function prevSlide() {\n        goToSlide((current - 1 + slides.length) % slides.length);\n    }\n    function startAutoplay() {\n        autoplayTimer = gsap.delayedCall(interval, ()=>{\n            nextSlide();\n            startAutoplay();\n        });\n    }\n    function resetAutoplay() {\n        if (autoplayTimer) autoplayTimer.kill();\n        startAutoplay();\n    }\n    // Bullet navigation\n    bullets.forEach((bullet, i)=>{\n        bullet.addEventListener(\"click\", ()=>{\n            goToSlide(i);\n            resetAutoplay();\n        });\n    });\n    // Arrow navigation\n    nextBtn?.addEventListener(\"click\", ()=>{\n        nextSlide();\n        resetAutoplay();\n    });\n    prevBtn?.addEventListener(\"click\", ()=>{\n        prevSlide();\n        resetAutoplay();\n    });\n    // Initial setup\n    gsap.set(slides, {\n        autoAlpha: 0,\n        zIndex: 1\n    });\n    gsap.set(slides[0], {\n        autoAlpha: 1,\n        zIndex: 2\n    });\n    slides[0].classList.add(\"is-current\");\n    bullets[0].classList.add(\"is-current\");\n    animateBulletFill(0);\n    animateTextIn(slides[0]);\n    // Play first slide's video\n    const initialVideo = getVideo(slides[0]);\n    if (initialVideo) initialVideo.play();\n    startAutoplay();\n}\n// Run on DOM ready\ndocument.addEventListener(\"DOMContentLoaded\", $0e149043dc8636b5$var$createHeroSlider);\n\n})();\n//# sourceMappingURL=home.js.map\n","function createHeroSlider() {\n  const slider = document.querySelector(\".home-slider_list\");\n  const slides = [...slider.querySelectorAll(\".home-slider_item\")];\n  const bullets = [...document.querySelectorAll(\".hero-slider_bullet\")];\n  const nextBtn = document.querySelector(\".is-slider-nav.next\");\n  const prevBtn = document.querySelector(\".is-slider-nav.prev\");\n\n  let current = 0;\n  let autoplayTimer;\n  const interval = 6; // seconds\n\n  // Utility to get video inside a slide\n  function getVideo(slide) {\n    return slide.querySelector(\".bg-video\");\n  }\n\n  // Step 1: Split all [data-hero-stagger] elements\n  slides.forEach((slide) => {\n    const targets = slide.querySelectorAll(\"[data-hero-stagger]\");\n    targets.forEach((el) => {\n      SplitText.create(el, {\n        type: \"lines\",\n        mask: \"lines\",\n        linesClass: \"line\",\n        autoSplit: true,\n        onSplit: (self) => {\n          gsap.set(self.lines, { yPercent: 100 });\n        },\n      });\n    });\n  });\n\n  function animateTextIn(slide) {\n    const targets = slide.querySelectorAll(\"[data-hero-stagger] .line\");\n    gsap.to(targets, {\n      yPercent: 0,\n      duration: 0.5,\n      ease: \"power2.out\",\n      stagger: 0.06,\n    });\n  }\n\n  function resetText(slide) {\n    const targets = slide.querySelectorAll(\"[data-hero-stagger] .line\");\n    gsap.set(targets, { yPercent: 100 });\n  }\n\n  function animateBulletFill(index) {\n    const fills = document.querySelectorAll(\".hero-slider_bullet-fill\");\n    fills.forEach((fill, i) => {\n      gsap.set(fill, { scaleX: 0, transformOrigin: \"left center\" });\n      if (i === index) {\n        gsap.to(fill, {\n          scaleX: 1,\n          duration: interval,\n          ease: \"none\",\n        });\n      }\n    });\n  }\n\n  function goToSlide(index) {\n    if (index === current || gsap.isTweening(slides[current])) return;\n\n    const currentSlide = slides[current];\n    const nextSlide = slides[index];\n\n    const currentVideo = getVideo(currentSlide);\n    const nextVideo = getVideo(nextSlide);\n\n    // Kill active tweens\n    gsap.killTweensOf([currentSlide, nextSlide, \".hero-slider_bullet-fill\"]);\n\n    slides.forEach((slide) => slide.classList.remove(\"is-current\"));\n    bullets.forEach((b) => b.classList.remove(\"is-current\"));\n\n    gsap.set(nextSlide, { autoAlpha: 0, zIndex: 2 });\n\n    // Play next slide's video immediately\n    if (nextVideo && nextVideo.paused) nextVideo.play();\n\n    gsap.to(currentSlide, { autoAlpha: 0, duration: 0.6 });\n    gsap.to(nextSlide, {\n      autoAlpha: 1,\n      duration: 0.6,\n      onStart: () => {\n        nextSlide.classList.add(\"is-current\");\n        bullets[index].classList.add(\"is-current\");\n        animateBulletFill(index);\n      },\n      onComplete: () => {\n        gsap.set(currentSlide, { zIndex: 1 });\n\n        // Pause previous slide's video\n        if (currentVideo && !currentVideo.paused) currentVideo.pause();\n\n        resetText(currentSlide);\n        animateTextIn(nextSlide);\n        current = index;\n      },\n    });\n  }\n\n  function nextSlide() {\n    goToSlide((current + 1) % slides.length);\n  }\n\n  function prevSlide() {\n    goToSlide((current - 1 + slides.length) % slides.length);\n  }\n\n  function startAutoplay() {\n    autoplayTimer = gsap.delayedCall(interval, () => {\n      nextSlide();\n      startAutoplay();\n    });\n  }\n\n  function resetAutoplay() {\n    if (autoplayTimer) autoplayTimer.kill();\n    startAutoplay();\n  }\n\n  // Bullet navigation\n  bullets.forEach((bullet, i) => {\n    bullet.addEventListener(\"click\", () => {\n      goToSlide(i);\n      resetAutoplay();\n    });\n  });\n\n  // Arrow navigation\n  nextBtn?.addEventListener(\"click\", () => {\n    nextSlide();\n    resetAutoplay();\n  });\n\n  prevBtn?.addEventListener(\"click\", () => {\n    prevSlide();\n    resetAutoplay();\n  });\n\n  // Initial setup\n  gsap.set(slides, { autoAlpha: 0, zIndex: 1 });\n  gsap.set(slides[0], { autoAlpha: 1, zIndex: 2 });\n  slides[0].classList.add(\"is-current\");\n  bullets[0].classList.add(\"is-current\");\n  animateBulletFill(0);\n  animateTextIn(slides[0]);\n\n  // Play first slide's video\n  const initialVideo = getVideo(slides[0]);\n  if (initialVideo) initialVideo.play();\n\n  startAutoplay();\n}\n\n// Run on DOM ready\ndocument.addEventListener(\"DOMContentLoaded\", createHeroSlider);\n"],"names":["document","addEventListener","autoplayTimer","slides","slider","querySelector","querySelectorAll","bullets","nextBtn","prevBtn","current","getVideo","slide","animateTextIn","targets","gsap","to","yPercent","duration","ease","stagger","animateBulletFill","index","fills","forEach","fill","i","set","scaleX","transformOrigin","goToSlide","isTweening","currentSlide","nextSlide","currentVideo","nextVideo","killTweensOf","classList","remove","b","autoAlpha","zIndex","paused","play","onStart","add","onComplete","pause","resetText","length","startAutoplay","delayedCall","resetAutoplay","kill","el","SplitText","create","type","mask","linesClass","autoSplit","onSplit","self","lines","bullet","initialVideo"],"version":3,"file":"home.js.map"}